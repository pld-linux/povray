--- povray-3.7.0.RC6/unix/config/ax_boost_thread.m4~	2012-02-05 21:54:21.000000000 +0100
+++ povray-3.7.0.RC6/unix/config/ax_boost_thread.m4	2012-07-11 11:55:14.040194944 +0200
@@ -104,23 +104,26 @@
                 for libextension in `ls $BOOSTLIBDIR/libboost_thread*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\(boost_thread.*\)\.so.*$;\1;'` `ls $BOOSTLIBDIR/libboost_thread*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\(boost_thread.*\)\.a*$;\1;'`; do
                      ax_lib=${libextension}
 				    AC_CHECK_LIB($ax_lib, exit,
-                                 [BOOST_THREAD_LIB="-l$ax_lib"; AC_SUBST(BOOST_THREAD_LIB) link_thread="yes"; break],
-                                 [link_thread="no"])
+                                 [BOOST_THREAD_LIB="-l$ax_lib -lboost_system"; AC_SUBST(BOOST_THREAD_LIB) link_thread="yes"; break],
+                                 [link_thread="no"],
+                                 [-lboost_system])
   				done
                 if test "x$link_thread" != "xyes"; then
                 for libextension in `ls $BOOSTLIBDIR/boost_thread*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\(boost_thread.*\)\.dll.*$;\1;'` `ls $BOOSTLIBDIR/boost_thread*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\(boost_thread.*\)\.a*$;\1;'` ; do
                      ax_lib=${libextension}
 				    AC_CHECK_LIB($ax_lib, exit,
-                                 [BOOST_THREAD_LIB="-l$ax_lib"; AC_SUBST(BOOST_THREAD_LIB) link_thread="yes"; break],
-                                 [link_thread="no"])
+                                 [BOOST_THREAD_LIB="-l$ax_lib -lboost_system"; AC_SUBST(BOOST_THREAD_LIB) link_thread="yes"; break],
+                                 [link_thread="no"],
+                                 [-lboost_system])
   				done
                 fi
 
             else
                for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do
 				      AC_CHECK_LIB($ax_lib, exit,
-                                   [BOOST_THREAD_LIB="-l$ax_lib"; AC_SUBST(BOOST_THREAD_LIB) link_thread="yes"; break],
-                                   [link_thread="no"])
+                                   [BOOST_THREAD_LIB="-l$ax_lib -lboost_system"; AC_SUBST(BOOST_THREAD_LIB) link_thread="yes"; break],
+                                   [link_thread="no"],
+                                   [-lboost_system])
                   done
 
             fi
diff -ur povray-3.7.0.RC6.orig/source/backend/scene/view.cpp povray-3.7.0.RC6/source/backend/scene/view.cpp
--- povray-3.7.0.RC6.orig/source/backend/scene/view.cpp	2012-07-11 12:26:19.627968703 +0200
+++ povray-3.7.0.RC6/source/backend/scene/view.cpp	2012-07-11 12:31:21.111291400 +0200
@@ -1550,7 +1550,7 @@
 	}
 
 	boost::xtime t;
-	boost::xtime_get (&t, boost::TIME_UTC);
+	boost::xtime_get (&t, boost::TIME_UTC_);
 	t.sec += 3;
 
 	// this will cause us to wait until the other threads are done.
diff -ur povray-3.7.0.RC6.orig/source/base/timer.cpp povray-3.7.0.RC6/source/base/timer.cpp
--- povray-3.7.0.RC6.orig/source/base/timer.cpp	2012-02-05 21:54:15.000000000 +0100
+++ povray-3.7.0.RC6/source/base/timer.cpp	2012-07-11 12:31:21.107958067 +0200
@@ -117,7 +117,7 @@
 POV_LONG TimerDefault::ElapsedRealTime() const
 {
 	boost::xtime t;
-	boost::xtime_get(&t, boost::TIME_UTC);
+	boost::xtime_get(&t, boost::TIME_UTC_);
 	POV_LONG tt = (POV_LONG)(t.sec) * (POV_LONG)(1000000000) + (POV_LONG)(t.nsec);
 	POV_LONG st = (POV_LONG)(realTimeStart.sec) * (POV_LONG)(1000000000) + (POV_LONG)(realTimeStart.nsec);
 	return ((tt - st) / (POV_LONG)(1000000));
@@ -126,7 +126,7 @@
 POV_LONG TimerDefault::ElapsedCPUTime() const
 {
 	boost::xtime t;
-	boost::xtime_get(&t, boost::TIME_UTC);
+	boost::xtime_get(&t, boost::TIME_UTC_);
 	POV_LONG tt = (POV_LONG)(t.sec) * (POV_LONG)(1000000000) + (POV_LONG)(t.nsec);
 	POV_LONG st = (POV_LONG)(cpuTimeStart.sec) * (POV_LONG)(1000000000) + (POV_LONG)(cpuTimeStart.nsec);
 	return ((tt - st) / (POV_LONG)(1000000));
@@ -139,8 +139,8 @@
 
 void TimerDefault::Reset()
 {
-	boost::xtime_get(&realTimeStart, boost::TIME_UTC);
-	boost::xtime_get(&cpuTimeStart, boost::TIME_UTC);
+	boost::xtime_get(&realTimeStart, boost::TIME_UTC_);
+	boost::xtime_get(&cpuTimeStart, boost::TIME_UTC_);
 }
 
 }
@@ -155,7 +155,7 @@
 void Delay(unsigned int msec)
 {
 	boost::xtime t;
-	boost::xtime_get(&t, boost::TIME_UTC);
+	boost::xtime_get(&t, boost::TIME_UTC_);
 	POV_ULONG ns = (POV_ULONG)(t.sec) * (POV_ULONG)(1000000000) + (POV_ULONG)(t.nsec) + (POV_ULONG)(msec) * (POV_ULONG)(1000000);
 	t.sec = (boost::xtime::xtime_sec_t)(ns / (POV_ULONG)(1000000000));
 	t.nsec = (boost::xtime::xtime_nsec_t)(ns % (POV_ULONG)(1000000000));
diff -ur povray-3.7.0.RC6.orig/vfe/unix/platformbase.cpp povray-3.7.0.RC6/vfe/unix/platformbase.cpp
--- povray-3.7.0.RC6.orig/vfe/unix/platformbase.cpp	2012-06-19 18:29:38.000000000 +0200
+++ povray-3.7.0.RC6/vfe/unix/platformbase.cpp	2012-07-11 12:31:21.114624733 +0200
@@ -126,7 +126,7 @@
 #else
 		// taken from source/base/timer.cpp
 		boost::xtime t;
-		boost::xtime_get(&t, boost::TIME_UTC);
+		boost::xtime_get(&t, boost::TIME_UTC_);
 		POV_ULONG ns = (POV_ULONG)(t.sec) * (POV_ULONG)(1000000000) + (POV_ULONG)(t.nsec) + (POV_ULONG)(msec) * (POV_ULONG)(1000000);
 		t.sec = (boost::xtime::xtime_sec_t)(ns / (POV_ULONG)(1000000000));
 		t.nsec = (boost::xtime::xtime_nsec_t)(ns % (POV_ULONG)(1000000000));
diff -ur povray-3.7.0.RC6.orig/vfe/vfepovms.cpp povray-3.7.0.RC6/vfe/vfepovms.cpp
--- povray-3.7.0.RC6.orig/vfe/vfepovms.cpp	2012-06-19 18:29:40.000000000 +0200
+++ povray-3.7.0.RC6/vfe/vfepovms.cpp	2012-07-11 12:31:21.114624733 +0200
@@ -247,7 +247,7 @@
 
     // TODO: have a shorter wait but loop, and check for system shutdown
     boost::xtime t;
-    boost::xtime_get (&t, boost::TIME_UTC);
+    boost::xtime_get (&t, boost::TIME_UTC_);
     t.nsec += 50000000 ;
     m_Event.timed_wait (lock, t);
 
diff -ur povray-3.7.0.RC6.orig/vfe/vfesession.cpp povray-3.7.0.RC6/vfe/vfesession.cpp
--- povray-3.7.0.RC6.orig/vfe/vfesession.cpp	2012-06-19 18:29:40.000000000 +0200
+++ povray-3.7.0.RC6/vfe/vfesession.cpp	2012-07-11 12:31:21.114624733 +0200
@@ -967,7 +967,7 @@
   if (WaitTime > 0)
   {
     boost::xtime t;
-    boost::xtime_get (&t, boost::TIME_UTC);
+    boost::xtime_get (&t, boost::TIME_UTC_);
     t.sec += WaitTime / 1000 ;
     t.nsec += (WaitTime % 1000) * 1000000 ;
     m_SessionEvent.timed_wait (lock, t);
@@ -1034,7 +1034,7 @@
   // we can't call pause directly since it will result in a thread context
   // error. pause must be called from the context of the worker thread.
   boost::xtime t;
-  boost::xtime_get (&t, boost::TIME_UTC);
+  boost::xtime_get (&t, boost::TIME_UTC_);
   t.sec += 3 ;
   m_RequestFlag = rqPauseRequest;
   if (m_RequestEvent.timed_wait(lock, t) == false)
@@ -1057,7 +1057,7 @@
   // we can't call resume directly since it will result in a thread context
   // error. it must be called from the context of the worker thread.
   boost::xtime t;
-  boost::xtime_get (&t, boost::TIME_UTC);
+  boost::xtime_get (&t, boost::TIME_UTC_);
   t.sec += 3 ;
   m_RequestFlag = rqResumeRequest;
   if (m_RequestEvent.timed_wait(lock, t) == false)
@@ -1123,7 +1123,7 @@
   m_LastError = vfeNoError;
 
   boost::xtime t;
-  boost::xtime_get (&t, boost::TIME_UTC);
+  boost::xtime_get (&t, boost::TIME_UTC_);
   t.sec += 3 ;
 #ifdef _DEBUG
   t.sec += 120;
